version: '3.8'
services:
    redis:
        image: redis:alpine
        container_name: redis
        networks:
            - net
        healthcheck:
            test: [ "CMD-SHELL", "redis-cli ping | grep -c PONG" ]
            interval: 10s
            timeout: 5s
            retries: 10

    entityfish:
        build: ./src/entityfish
        container_name: entityfish
        networks:
            - entityfish
        expose:
            - 8090
        volumes:
            - ./src/entityfish/models/:/opt/entity-fishing/data/db/
        healthcheck:
            test: [ "CMD-SHELL", "curl -f http://localhost:8091 || exit 1" ]
            interval: 10s
            timeout: 5s
            retries: 10

    back:
        build: ./src/back
        container_name: back
        networks:
            - net
            - out
            - entityfish
        expose:
            - 8000
        volumes:
            - ./src/back/:/usr/src/back/
        depends_on:
            - redis
        command: [ "python", "-m", "api" ]
        environment:
            ES_INDEX: $ES_INDEX
            ES_HOST: $ES_HOST
            ES_LOGIN: $ES_LOGIN
            ES_PASSWORD: $ES_PASSWORD
        healthcheck:
            test: [ "CMD-SHELL", "curl -f http://localhost:8000 || exit 1" ]
            interval: 10s
            timeout: 5s
            retries: 10

    front:
        build: ./src/front
        container_name: front
        networks:
            - net
            - out
        expose:
            - 3000
        volumes:
            - ./src/front/:/usr/src/front/
        depends_on:
            - back
        command: sh -c "npm install && npm install -g serve && npm run build && serve -s dist -l 3000"
        healthcheck:
            test: [ "CMD-SHELL", "ps aux | grep '[s]erve -s dist -l 3000'" ]
            interval: 10s
            timeout: 5s
            retries: 10

    server:
        build: ./src/server
        container_name: server
        networks:
            - out
        ports:
            - "8444:8444"
        depends_on:
            back:
                condition: service_healthy
            front:
                condition: service_healthy

networks:
    net:
        driver: bridge
    out:
        driver: bridge
    entityfish:
        driver: bridge
